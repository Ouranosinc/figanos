[build-system]
requires = ["flit_core >=3.8,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "figanos"
authors = [
  {name = "Sarah-Claude Bourdeau-Goulet", email = "bourdeau-goulet.sarah-claude@ouranos.ca"}
]
maintainers = []
readme = {file = "README.rst", content-type = "text/x-rst"}
requires-python = ">=3.8.0"
keywords = ["figanos"]
license = {file = "LICENSE"}
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython"
]
dynamic = ["description", "version"]
dependencies = [
  "cartopy",
  "cairosvg",
  "geopandas",
  "matplotlib",
  "numpy",
  "pandas",
  "platformdirs",
  "pyyaml",
  "seaborn",
  "scikit-image",
  "xarray",
  "xclim"
]

[project.optional-dependencies]
dev = [
  # Dev tools and testing
  "pip>=23.3",
  "bump2version>=1.0.1",
  "watchdog>=3.0.0",
  "flake8>=6.1.0",
  "flake8-rst-docstrings>=0.3.0",
  "flit",
  "tox>=4.5.1",
  "coverage>=7.2.5",
  "coveralls>=3.3.1",
  "pytest>=7.3.1",
  "pytest-cov>=4.0.0",
  "black>=23.10.1",
  "blackdoc>=0.3.9",
  "isort>=5.12.0",
  "pre-commit>=3.3.2"
]
docs = [
  # Documentation and examples
  "xclim>=0.38",
  "dask",
  "h5py",
  "netcdf4",
  "pyyaml",
  "zarr",
  "geoviews",
  "holoviews",
  "ipykernel",
  "ipython",
  "jupyter_client",
  "nbsphinx",
  "pandoc",
  "sphinx-click",
  "sphinx-codeautolink",
  "sphinx-copybutton",
  "sphinx>=7.0",
  "sphinx_book_theme",
  "sphinxcontrib-napoleon"
]

[project.scripts]
figanos = "figanos.cli:cli"

[project.urls]
# "Homepage" = "https://figanos.readthedocs.io/"
# "Changelog" = "https://figanos.readthedocs.io/en/stable/history.html"
# "About Ouranos" = "https://www.ouranos.ca/en/"
"Source" = "https://github.com/Sarahclaude/figanos"
"Issue tracker" = "https://github.com/Sarahclaude/figanos/issues"

[tool]

[tool.black]
target-version = [
  "py38",
  "py39",
  "py310",
  "py311"
]

[tool.coverage.run]
relative_files = true
include = ["figanos/*"]
omit = ["tests/*.py"]

[tool.flit.sdist]
include = [
  ".zenodo.json",
  "AUTHORS.rst",
  "CHANGES.rst",
  "CONTRIBUTING.rst",
  "LICENSE",
  "README.rst",
  "docs/**/*.rst",
  "docs/**/*.jpg",
  "docs/**/*.png",
  "docs/**/*.gif",
  "docs/Makefile",
  "docs/conf.py",
  "docs/make.bat",
  "setup.cfg",
  "tests/*.py",
  "figanos/**/*.json",
  "figanos/**/*.mplstyle",
  "figanos/**/*.png",
  "figanos/**/*.py",
  "figanos/**/*.txt",
  "figanos/**/*.yml"
]
exclude = [
  "**/*.py[co]",
  "**/__pycache__",
  ".coveralls.yml",
  ".gitignore",
  ".editorconfig",
  ".pre-commit-config.yaml",
  ".yamllint.yaml",
  "Makefile",
  "docs/modules.rst",
  "docs/figanos*.rst",
  "environment-dev.yml",
  "environment-docs.yml",
  "tox.ini"
]

[tool.isort]
profile = "black"
py_version = 38

[tool.mypy]
python_version = 3.8
show_error_codes = true
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = []
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = [
  "--verbose",
  "--color=yes"
]
filterwarnings = ["ignore::UserWarning"]
testpaths = "tests"

[tool.ruff]
src = [""]
line-length = 150
target-version = "py38"
exclude = [
  ".eggs",
  ".git",
  "build",
  "docs",
  "tests"
]
ignore = [
  "D205",
  "D400",
  "D401"
]
select = [
  "C9",
  "D",
  "E",
  "F",
  "W"
]

[tool.ruff.flake8-bandit]
check-typed-exception = true

[tool.ruff.format]
line-ending = "auto"

[tool.ruff.isort]
known-first-party = ["figanos"]
case-sensitive = true
detect-same-package = false
lines-after-imports = 1
no-lines-before = ["future", "standard-library"]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.per-file-ignores]
"figanos/**/__init__.py" = ["F401", "F403"]
"figanos/matplotlib/**/*.py" = ["C901"]

[tool.ruff.pycodestyle]
max-doc-length = 180

[tool.ruff.pydocstyle]
convention = "numpy"
